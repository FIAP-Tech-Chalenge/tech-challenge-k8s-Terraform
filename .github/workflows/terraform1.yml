name: Deploy and Post-Deployment Tasks

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      target_group_arn: ${{ steps.tg_arn.outputs.target_group_arn }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.0.0'

      - name: Set up AWS environment variables from secrets
        run: |
          echo "TF_VAR_aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "TF_VAR_aws_session_token=${{ secrets.AWS_SESSION_TOKEN }}" >> $GITHUB_ENV
          echo "TF_VAR_regionDefault=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV

      - name: Terraform Init
        run: terraform init -input=false
        working-directory: eks

      - name: Terraform Validate
        run: terraform validate
        working-directory: eks

      - name: Terraform Plan
        run: terraform plan -input=false
        working-directory: eks

      - name: Terraform Apply EKS and Security Group
        run: terraform apply -auto-approve
        working-directory: eks
        id: apply

      - name: Output Target Group ARN
        id: tg_arn
        run: echo "::set-output name=target_group_arn::$(terraform output -raw target_group_arn)"
        working-directory: eks

  post-deploy:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.0.0'

      - name: Set up AWS environment variables from secrets
        run: |
          echo "TF_VAR_aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "TF_VAR_aws_session_token=${{ secrets.AWS_SESSION_TOKEN }}" >> $GITHUB_ENV
          echo "TF_VAR_regionDefault=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV

      - name: Terraform Init
        run: terraform init -input=false
        working-directory: lb

      - name: Terraform Validate
        run: terraform validate
        working-directory: lb

      - name: Terraform Plan
        run: terraform plan -input=false
        working-directory: lb

      - name: Terraform Apply Load Balancer Attachment
        run: terraform apply -auto-approve
        working-directory: lb

      - name: Get Target Group ARN from previous workflow
        run: |
          TG_ARN=${{ needs.deploy.outputs.target_group_arn }}
          echo "TARGET_GROUP_ARN=$TG_ARN" >> $GITHUB_ENV